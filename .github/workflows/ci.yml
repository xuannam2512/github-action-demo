# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Set up Docker Buildx
      id: buildx
      if: ${{ github.event_name == 'push'}}
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      if: ${{ github.event_name == 'push'}}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build docker image
      if: ${{ github.event_name == 'push'}}
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/github-action-demo:latest

  deploy:
    if: ${{ github.event_name == 'push'}}
    needs:
      - build
    runs-on: [self-hosted, linux, x64, dev]

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Pull docker image
        run: docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/github-action-demo:latest

      - name: Stop docker container
        run: docker stop ${{ secrets.DOCKER_HUB_USERNAME }}/github-action-demo

      - name: Remove docker container
        run: docker rm ${{ secrets.DOCKER_HUB_USERNAME }}/github-action-demo

      - name: Start container
        run: |
          docker run -d \
          --publish 8080:8080 \
          --name github-action-demo-container \
          ${{ secrets.DOCKER_HUB_USERNAME }}/github-action-demo:latest
